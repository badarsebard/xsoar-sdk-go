/*
Cortex XSOAR API

This is the public REST API to integrate with the Cortex XSOAR server. HTTP request can be sent using any HTTP-client.  For an example dedicated client take a look at: https://github.com/demisto/demisto-py.  Requests must include API-key that can be generated in the Cortex XSOAR web client under 'Settings' -> 'Integrations' -> 'API keys'   Optimistic Locking and Versioning\\:  When using Cortex XSOAR REST API, you will need to make sure to work on the latest version of the item (incident, entry, etc.), otherwise, you will get a DB version error (which not allow you to override a newer item). In addition, you can pass 'version\\: -1' to force data override (make sure that other users data might be lost).  Assume that Alice and Bob both read the same data from Cortex XSOAR server, then they both changed the data, and then both tried to write the new versions back to the server. Whose changes should be saved? Alice’s? Bob’s? To solve this, each data item in Cortex XSOAR has a numeric incremental version. If Alice saved an item with version 4 and Bob trying to save the same item with version 3, Cortex XSOAR will rollback Bob request and returns a DB version conflict error. Bob will need to get the latest item and work on it so Alice work will not get lost.  Example request using 'curl'\\:  ``` curl 'https://hostname:443/incidents/search' -H 'content-type: application/json' -H 'accept: application/json' -H 'Authorization: <API Key goes here>' --data-binary '{\"filter\":{\"query\":\"-status:closed -category:job\",\"period\":{\"by\":\"day\",\"fromValue\":7}}}' --compressed ```

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ModuleConfiguration ModuleConfiguration is the configuration parameters for a module
type ModuleConfiguration struct {
	Beta                              *bool                `json:"beta,omitempty"`
	Brand                             *string              `json:"brand,omitempty"`
	CanGetSamples                     *bool                `json:"canGetSamples,omitempty"`
	Category                          *string              `json:"category,omitempty"`
	Cmdline                           *string              `json:"cmdline,omitempty"`
	CommitMessage                     *string              `json:"commitMessage,omitempty"`
	Configuration                     *[]ConfigField       `json:"configuration,omitempty"`
	DefaultClassifier                 *string              `json:"defaultClassifier,omitempty"`
	DefaultMapperIn                   *string              `json:"defaultMapperIn,omitempty"`
	DefaultMapperOut                  *string              `json:"defaultMapperOut,omitempty"`
	Deprecated                        *bool                `json:"deprecated,omitempty"`
	Description                       *string              `json:"description,omitempty"`
	DetailedDescription               *string              `json:"detailedDescription,omitempty"`
	Display                           *string              `json:"display,omitempty"`
	Executable                        *string              `json:"executable,omitempty"`
	FromServerVersion                 *string              `json:"fromServerVersion,omitempty"`
	Hidden                            *bool                `json:"hidden,omitempty"`
	HideEngines                       *bool                `json:"hideEngines,omitempty"`
	Highlight                         *map[string][]string `json:"highlight,omitempty"`
	Icon                              *string              `json:"icon,omitempty"`
	Id                                *string              `json:"id,omitempty"`
	Image                             *string              `json:"image,omitempty"`
	IntegrationScript                 *IntegrationScript   `json:"integrationScript,omitempty"`
	IsPasswordProtected               *bool                `json:"isPasswordProtected,omitempty"`
	ItemVersion                       *string              `json:"itemVersion,omitempty"`
	Locked                            *bool                `json:"locked,omitempty"`
	Modified                          *time.Time           `json:"modified,omitempty"`
	Name                              *string              `json:"name,omitempty"`
	NumericId                         *int64               `json:"numericId,omitempty"`
	PackID                            *string              `json:"packID,omitempty"`
	PackPropagationLabels             *[]string            `json:"packPropagationLabels,omitempty"`
	Path                              *string              `json:"path,omitempty"`
	PrevName                          *string              `json:"prevName,omitempty"`
	PrimaryTerm                       *int64               `json:"primaryTerm,omitempty"`
	Private                           *bool                `json:"private,omitempty"`
	PropagationLabels                 *[]string            `json:"propagationLabels,omitempty"`
	Readonly                          *bool                `json:"readonly,omitempty"`
	ScriptNotVisible                  *bool                `json:"scriptNotVisible,omitempty"`
	SequenceNumber                    *int64               `json:"sequenceNumber,omitempty"`
	ShouldCommit                      *bool                `json:"shouldCommit,omitempty"`
	SortValues                        *[]string            `json:"sortValues,omitempty"`
	SourceModuleID                    *string              `json:"sourceModuleID,omitempty"`
	System                            *bool                `json:"system,omitempty"`
	ToServerVersion                   *string              `json:"toServerVersion,omitempty"`
	VcShouldIgnore                    *bool                `json:"vcShouldIgnore,omitempty"`
	VcShouldKeepItemLegacyProdMachine *bool                `json:"vcShouldKeepItemLegacyProdMachine,omitempty"`
	Version                           *int64               `json:"version,omitempty"`
}

// NewModuleConfiguration instantiates a new ModuleConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModuleConfiguration() *ModuleConfiguration {
	this := ModuleConfiguration{}
	return &this
}

// NewModuleConfigurationWithDefaults instantiates a new ModuleConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModuleConfigurationWithDefaults() *ModuleConfiguration {
	this := ModuleConfiguration{}
	return &this
}

// GetBeta returns the Beta field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetBeta() bool {
	if o == nil || o.Beta == nil {
		var ret bool
		return ret
	}
	return *o.Beta
}

// GetBetaOk returns a tuple with the Beta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetBetaOk() (*bool, bool) {
	if o == nil || o.Beta == nil {
		return nil, false
	}
	return o.Beta, true
}

// HasBeta returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasBeta() bool {
	if o != nil && o.Beta != nil {
		return true
	}

	return false
}

// SetBeta gets a reference to the given bool and assigns it to the Beta field.
func (o *ModuleConfiguration) SetBeta(v bool) {
	o.Beta = &v
}

// GetBrand returns the Brand field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetBrand() string {
	if o == nil || o.Brand == nil {
		var ret string
		return ret
	}
	return *o.Brand
}

// GetBrandOk returns a tuple with the Brand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetBrandOk() (*string, bool) {
	if o == nil || o.Brand == nil {
		return nil, false
	}
	return o.Brand, true
}

// HasBrand returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasBrand() bool {
	if o != nil && o.Brand != nil {
		return true
	}

	return false
}

// SetBrand gets a reference to the given string and assigns it to the Brand field.
func (o *ModuleConfiguration) SetBrand(v string) {
	o.Brand = &v
}

// GetCanGetSamples returns the CanGetSamples field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetCanGetSamples() bool {
	if o == nil || o.CanGetSamples == nil {
		var ret bool
		return ret
	}
	return *o.CanGetSamples
}

// GetCanGetSamplesOk returns a tuple with the CanGetSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetCanGetSamplesOk() (*bool, bool) {
	if o == nil || o.CanGetSamples == nil {
		return nil, false
	}
	return o.CanGetSamples, true
}

// HasCanGetSamples returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasCanGetSamples() bool {
	if o != nil && o.CanGetSamples != nil {
		return true
	}

	return false
}

// SetCanGetSamples gets a reference to the given bool and assigns it to the CanGetSamples field.
func (o *ModuleConfiguration) SetCanGetSamples(v bool) {
	o.CanGetSamples = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ModuleConfiguration) SetCategory(v string) {
	o.Category = &v
}

// GetCmdline returns the Cmdline field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetCmdline() string {
	if o == nil || o.Cmdline == nil {
		var ret string
		return ret
	}
	return *o.Cmdline
}

// GetCmdlineOk returns a tuple with the Cmdline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetCmdlineOk() (*string, bool) {
	if o == nil || o.Cmdline == nil {
		return nil, false
	}
	return o.Cmdline, true
}

// HasCmdline returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasCmdline() bool {
	if o != nil && o.Cmdline != nil {
		return true
	}

	return false
}

// SetCmdline gets a reference to the given string and assigns it to the Cmdline field.
func (o *ModuleConfiguration) SetCmdline(v string) {
	o.Cmdline = &v
}

// GetCommitMessage returns the CommitMessage field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetCommitMessage() string {
	if o == nil || o.CommitMessage == nil {
		var ret string
		return ret
	}
	return *o.CommitMessage
}

// GetCommitMessageOk returns a tuple with the CommitMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetCommitMessageOk() (*string, bool) {
	if o == nil || o.CommitMessage == nil {
		return nil, false
	}
	return o.CommitMessage, true
}

// HasCommitMessage returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasCommitMessage() bool {
	if o != nil && o.CommitMessage != nil {
		return true
	}

	return false
}

// SetCommitMessage gets a reference to the given string and assigns it to the CommitMessage field.
func (o *ModuleConfiguration) SetCommitMessage(v string) {
	o.CommitMessage = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetConfiguration() []ConfigField {
	if o == nil || o.Configuration == nil {
		var ret []ConfigField
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetConfigurationOk() (*[]ConfigField, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given []ConfigField and assigns it to the Configuration field.
func (o *ModuleConfiguration) SetConfiguration(v []ConfigField) {
	o.Configuration = &v
}

// GetDefaultClassifier returns the DefaultClassifier field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetDefaultClassifier() string {
	if o == nil || o.DefaultClassifier == nil {
		var ret string
		return ret
	}
	return *o.DefaultClassifier
}

// GetDefaultClassifierOk returns a tuple with the DefaultClassifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetDefaultClassifierOk() (*string, bool) {
	if o == nil || o.DefaultClassifier == nil {
		return nil, false
	}
	return o.DefaultClassifier, true
}

// HasDefaultClassifier returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasDefaultClassifier() bool {
	if o != nil && o.DefaultClassifier != nil {
		return true
	}

	return false
}

// SetDefaultClassifier gets a reference to the given string and assigns it to the DefaultClassifier field.
func (o *ModuleConfiguration) SetDefaultClassifier(v string) {
	o.DefaultClassifier = &v
}

// GetDefaultMapperIn returns the DefaultMapperIn field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetDefaultMapperIn() string {
	if o == nil || o.DefaultMapperIn == nil {
		var ret string
		return ret
	}
	return *o.DefaultMapperIn
}

// GetDefaultMapperInOk returns a tuple with the DefaultMapperIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetDefaultMapperInOk() (*string, bool) {
	if o == nil || o.DefaultMapperIn == nil {
		return nil, false
	}
	return o.DefaultMapperIn, true
}

// HasDefaultMapperIn returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasDefaultMapperIn() bool {
	if o != nil && o.DefaultMapperIn != nil {
		return true
	}

	return false
}

// SetDefaultMapperIn gets a reference to the given string and assigns it to the DefaultMapperIn field.
func (o *ModuleConfiguration) SetDefaultMapperIn(v string) {
	o.DefaultMapperIn = &v
}

// GetDefaultMapperOut returns the DefaultMapperOut field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetDefaultMapperOut() string {
	if o == nil || o.DefaultMapperOut == nil {
		var ret string
		return ret
	}
	return *o.DefaultMapperOut
}

// GetDefaultMapperOutOk returns a tuple with the DefaultMapperOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetDefaultMapperOutOk() (*string, bool) {
	if o == nil || o.DefaultMapperOut == nil {
		return nil, false
	}
	return o.DefaultMapperOut, true
}

// HasDefaultMapperOut returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasDefaultMapperOut() bool {
	if o != nil && o.DefaultMapperOut != nil {
		return true
	}

	return false
}

// SetDefaultMapperOut gets a reference to the given string and assigns it to the DefaultMapperOut field.
func (o *ModuleConfiguration) SetDefaultMapperOut(v string) {
	o.DefaultMapperOut = &v
}

// GetDeprecated returns the Deprecated field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetDeprecated() bool {
	if o == nil || o.Deprecated == nil {
		var ret bool
		return ret
	}
	return *o.Deprecated
}

// GetDeprecatedOk returns a tuple with the Deprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetDeprecatedOk() (*bool, bool) {
	if o == nil || o.Deprecated == nil {
		return nil, false
	}
	return o.Deprecated, true
}

// HasDeprecated returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasDeprecated() bool {
	if o != nil && o.Deprecated != nil {
		return true
	}

	return false
}

// SetDeprecated gets a reference to the given bool and assigns it to the Deprecated field.
func (o *ModuleConfiguration) SetDeprecated(v bool) {
	o.Deprecated = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModuleConfiguration) SetDescription(v string) {
	o.Description = &v
}

// GetDetailedDescription returns the DetailedDescription field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetDetailedDescription() string {
	if o == nil || o.DetailedDescription == nil {
		var ret string
		return ret
	}
	return *o.DetailedDescription
}

// GetDetailedDescriptionOk returns a tuple with the DetailedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetDetailedDescriptionOk() (*string, bool) {
	if o == nil || o.DetailedDescription == nil {
		return nil, false
	}
	return o.DetailedDescription, true
}

// HasDetailedDescription returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasDetailedDescription() bool {
	if o != nil && o.DetailedDescription != nil {
		return true
	}

	return false
}

// SetDetailedDescription gets a reference to the given string and assigns it to the DetailedDescription field.
func (o *ModuleConfiguration) SetDetailedDescription(v string) {
	o.DetailedDescription = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetDisplay() string {
	if o == nil || o.Display == nil {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetDisplayOk() (*string, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *ModuleConfiguration) SetDisplay(v string) {
	o.Display = &v
}

// GetExecutable returns the Executable field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetExecutable() string {
	if o == nil || o.Executable == nil {
		var ret string
		return ret
	}
	return *o.Executable
}

// GetExecutableOk returns a tuple with the Executable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetExecutableOk() (*string, bool) {
	if o == nil || o.Executable == nil {
		return nil, false
	}
	return o.Executable, true
}

// HasExecutable returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasExecutable() bool {
	if o != nil && o.Executable != nil {
		return true
	}

	return false
}

// SetExecutable gets a reference to the given string and assigns it to the Executable field.
func (o *ModuleConfiguration) SetExecutable(v string) {
	o.Executable = &v
}

// GetFromServerVersion returns the FromServerVersion field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetFromServerVersion() string {
	if o == nil || o.FromServerVersion == nil {
		var ret string
		return ret
	}
	return *o.FromServerVersion
}

// GetFromServerVersionOk returns a tuple with the FromServerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetFromServerVersionOk() (*string, bool) {
	if o == nil || o.FromServerVersion == nil {
		return nil, false
	}
	return o.FromServerVersion, true
}

// HasFromServerVersion returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasFromServerVersion() bool {
	if o != nil && o.FromServerVersion != nil {
		return true
	}

	return false
}

// SetFromServerVersion gets a reference to the given string and assigns it to the FromServerVersion field.
func (o *ModuleConfiguration) SetFromServerVersion(v string) {
	o.FromServerVersion = &v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetHidden() bool {
	if o == nil || o.Hidden == nil {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetHiddenOk() (*bool, bool) {
	if o == nil || o.Hidden == nil {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasHidden() bool {
	if o != nil && o.Hidden != nil {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *ModuleConfiguration) SetHidden(v bool) {
	o.Hidden = &v
}

// GetHideEngines returns the HideEngines field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetHideEngines() bool {
	if o == nil || o.HideEngines == nil {
		var ret bool
		return ret
	}
	return *o.HideEngines
}

// GetHideEnginesOk returns a tuple with the HideEngines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetHideEnginesOk() (*bool, bool) {
	if o == nil || o.HideEngines == nil {
		return nil, false
	}
	return o.HideEngines, true
}

// HasHideEngines returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasHideEngines() bool {
	if o != nil && o.HideEngines != nil {
		return true
	}

	return false
}

// SetHideEngines gets a reference to the given bool and assigns it to the HideEngines field.
func (o *ModuleConfiguration) SetHideEngines(v bool) {
	o.HideEngines = &v
}

// GetHighlight returns the Highlight field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetHighlight() map[string][]string {
	if o == nil || o.Highlight == nil {
		var ret map[string][]string
		return ret
	}
	return *o.Highlight
}

// GetHighlightOk returns a tuple with the Highlight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetHighlightOk() (*map[string][]string, bool) {
	if o == nil || o.Highlight == nil {
		return nil, false
	}
	return o.Highlight, true
}

// HasHighlight returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasHighlight() bool {
	if o != nil && o.Highlight != nil {
		return true
	}

	return false
}

// SetHighlight gets a reference to the given map[string][]string and assigns it to the Highlight field.
func (o *ModuleConfiguration) SetHighlight(v map[string][]string) {
	o.Highlight = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetIcon() string {
	if o == nil || o.Icon == nil {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetIconOk() (*string, bool) {
	if o == nil || o.Icon == nil {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasIcon() bool {
	if o != nil && o.Icon != nil {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *ModuleConfiguration) SetIcon(v string) {
	o.Icon = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModuleConfiguration) SetId(v string) {
	o.Id = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ModuleConfiguration) SetImage(v string) {
	o.Image = &v
}

// GetIntegrationScript returns the IntegrationScript field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetIntegrationScript() IntegrationScript {
	if o == nil || o.IntegrationScript == nil {
		var ret IntegrationScript
		return ret
	}
	return *o.IntegrationScript
}

// GetIntegrationScriptOk returns a tuple with the IntegrationScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetIntegrationScriptOk() (*IntegrationScript, bool) {
	if o == nil || o.IntegrationScript == nil {
		return nil, false
	}
	return o.IntegrationScript, true
}

// HasIntegrationScript returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasIntegrationScript() bool {
	if o != nil && o.IntegrationScript != nil {
		return true
	}

	return false
}

// SetIntegrationScript gets a reference to the given IntegrationScript and assigns it to the IntegrationScript field.
func (o *ModuleConfiguration) SetIntegrationScript(v IntegrationScript) {
	o.IntegrationScript = &v
}

// GetIsPasswordProtected returns the IsPasswordProtected field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetIsPasswordProtected() bool {
	if o == nil || o.IsPasswordProtected == nil {
		var ret bool
		return ret
	}
	return *o.IsPasswordProtected
}

// GetIsPasswordProtectedOk returns a tuple with the IsPasswordProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetIsPasswordProtectedOk() (*bool, bool) {
	if o == nil || o.IsPasswordProtected == nil {
		return nil, false
	}
	return o.IsPasswordProtected, true
}

// HasIsPasswordProtected returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasIsPasswordProtected() bool {
	if o != nil && o.IsPasswordProtected != nil {
		return true
	}

	return false
}

// SetIsPasswordProtected gets a reference to the given bool and assigns it to the IsPasswordProtected field.
func (o *ModuleConfiguration) SetIsPasswordProtected(v bool) {
	o.IsPasswordProtected = &v
}

// GetItemVersion returns the ItemVersion field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetItemVersion() string {
	if o == nil || o.ItemVersion == nil {
		var ret string
		return ret
	}
	return *o.ItemVersion
}

// GetItemVersionOk returns a tuple with the ItemVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetItemVersionOk() (*string, bool) {
	if o == nil || o.ItemVersion == nil {
		return nil, false
	}
	return o.ItemVersion, true
}

// HasItemVersion returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasItemVersion() bool {
	if o != nil && o.ItemVersion != nil {
		return true
	}

	return false
}

// SetItemVersion gets a reference to the given string and assigns it to the ItemVersion field.
func (o *ModuleConfiguration) SetItemVersion(v string) {
	o.ItemVersion = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *ModuleConfiguration) SetLocked(v bool) {
	o.Locked = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetModified() time.Time {
	if o == nil || o.Modified == nil {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetModifiedOk() (*time.Time, bool) {
	if o == nil || o.Modified == nil {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasModified() bool {
	if o != nil && o.Modified != nil {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *ModuleConfiguration) SetModified(v time.Time) {
	o.Modified = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModuleConfiguration) SetName(v string) {
	o.Name = &v
}

// GetNumericId returns the NumericId field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetNumericId() int64 {
	if o == nil || o.NumericId == nil {
		var ret int64
		return ret
	}
	return *o.NumericId
}

// GetNumericIdOk returns a tuple with the NumericId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetNumericIdOk() (*int64, bool) {
	if o == nil || o.NumericId == nil {
		return nil, false
	}
	return o.NumericId, true
}

// HasNumericId returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasNumericId() bool {
	if o != nil && o.NumericId != nil {
		return true
	}

	return false
}

// SetNumericId gets a reference to the given int64 and assigns it to the NumericId field.
func (o *ModuleConfiguration) SetNumericId(v int64) {
	o.NumericId = &v
}

// GetPackID returns the PackID field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetPackID() string {
	if o == nil || o.PackID == nil {
		var ret string
		return ret
	}
	return *o.PackID
}

// GetPackIDOk returns a tuple with the PackID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetPackIDOk() (*string, bool) {
	if o == nil || o.PackID == nil {
		return nil, false
	}
	return o.PackID, true
}

// HasPackID returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasPackID() bool {
	if o != nil && o.PackID != nil {
		return true
	}

	return false
}

// SetPackID gets a reference to the given string and assigns it to the PackID field.
func (o *ModuleConfiguration) SetPackID(v string) {
	o.PackID = &v
}

// GetPackPropagationLabels returns the PackPropagationLabels field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetPackPropagationLabels() []string {
	if o == nil || o.PackPropagationLabels == nil {
		var ret []string
		return ret
	}
	return *o.PackPropagationLabels
}

// GetPackPropagationLabelsOk returns a tuple with the PackPropagationLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetPackPropagationLabelsOk() (*[]string, bool) {
	if o == nil || o.PackPropagationLabels == nil {
		return nil, false
	}
	return o.PackPropagationLabels, true
}

// HasPackPropagationLabels returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasPackPropagationLabels() bool {
	if o != nil && o.PackPropagationLabels != nil {
		return true
	}

	return false
}

// SetPackPropagationLabels gets a reference to the given []string and assigns it to the PackPropagationLabels field.
func (o *ModuleConfiguration) SetPackPropagationLabels(v []string) {
	o.PackPropagationLabels = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ModuleConfiguration) SetPath(v string) {
	o.Path = &v
}

// GetPrevName returns the PrevName field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetPrevName() string {
	if o == nil || o.PrevName == nil {
		var ret string
		return ret
	}
	return *o.PrevName
}

// GetPrevNameOk returns a tuple with the PrevName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetPrevNameOk() (*string, bool) {
	if o == nil || o.PrevName == nil {
		return nil, false
	}
	return o.PrevName, true
}

// HasPrevName returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasPrevName() bool {
	if o != nil && o.PrevName != nil {
		return true
	}

	return false
}

// SetPrevName gets a reference to the given string and assigns it to the PrevName field.
func (o *ModuleConfiguration) SetPrevName(v string) {
	o.PrevName = &v
}

// GetPrimaryTerm returns the PrimaryTerm field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetPrimaryTerm() int64 {
	if o == nil || o.PrimaryTerm == nil {
		var ret int64
		return ret
	}
	return *o.PrimaryTerm
}

// GetPrimaryTermOk returns a tuple with the PrimaryTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetPrimaryTermOk() (*int64, bool) {
	if o == nil || o.PrimaryTerm == nil {
		return nil, false
	}
	return o.PrimaryTerm, true
}

// HasPrimaryTerm returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasPrimaryTerm() bool {
	if o != nil && o.PrimaryTerm != nil {
		return true
	}

	return false
}

// SetPrimaryTerm gets a reference to the given int64 and assigns it to the PrimaryTerm field.
func (o *ModuleConfiguration) SetPrimaryTerm(v int64) {
	o.PrimaryTerm = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetPrivate() bool {
	if o == nil || o.Private == nil {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetPrivateOk() (*bool, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *ModuleConfiguration) SetPrivate(v bool) {
	o.Private = &v
}

// GetPropagationLabels returns the PropagationLabels field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetPropagationLabels() []string {
	if o == nil || o.PropagationLabels == nil {
		var ret []string
		return ret
	}
	return *o.PropagationLabels
}

// GetPropagationLabelsOk returns a tuple with the PropagationLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetPropagationLabelsOk() (*[]string, bool) {
	if o == nil || o.PropagationLabels == nil {
		return nil, false
	}
	return o.PropagationLabels, true
}

// HasPropagationLabels returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasPropagationLabels() bool {
	if o != nil && o.PropagationLabels != nil {
		return true
	}

	return false
}

// SetPropagationLabels gets a reference to the given []string and assigns it to the PropagationLabels field.
func (o *ModuleConfiguration) SetPropagationLabels(v []string) {
	o.PropagationLabels = &v
}

// GetReadonly returns the Readonly field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetReadonly() bool {
	if o == nil || o.Readonly == nil {
		var ret bool
		return ret
	}
	return *o.Readonly
}

// GetReadonlyOk returns a tuple with the Readonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetReadonlyOk() (*bool, bool) {
	if o == nil || o.Readonly == nil {
		return nil, false
	}
	return o.Readonly, true
}

// HasReadonly returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasReadonly() bool {
	if o != nil && o.Readonly != nil {
		return true
	}

	return false
}

// SetReadonly gets a reference to the given bool and assigns it to the Readonly field.
func (o *ModuleConfiguration) SetReadonly(v bool) {
	o.Readonly = &v
}

// GetScriptNotVisible returns the ScriptNotVisible field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetScriptNotVisible() bool {
	if o == nil || o.ScriptNotVisible == nil {
		var ret bool
		return ret
	}
	return *o.ScriptNotVisible
}

// GetScriptNotVisibleOk returns a tuple with the ScriptNotVisible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetScriptNotVisibleOk() (*bool, bool) {
	if o == nil || o.ScriptNotVisible == nil {
		return nil, false
	}
	return o.ScriptNotVisible, true
}

// HasScriptNotVisible returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasScriptNotVisible() bool {
	if o != nil && o.ScriptNotVisible != nil {
		return true
	}

	return false
}

// SetScriptNotVisible gets a reference to the given bool and assigns it to the ScriptNotVisible field.
func (o *ModuleConfiguration) SetScriptNotVisible(v bool) {
	o.ScriptNotVisible = &v
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetSequenceNumber() int64 {
	if o == nil || o.SequenceNumber == nil {
		var ret int64
		return ret
	}
	return *o.SequenceNumber
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetSequenceNumberOk() (*int64, bool) {
	if o == nil || o.SequenceNumber == nil {
		return nil, false
	}
	return o.SequenceNumber, true
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasSequenceNumber() bool {
	if o != nil && o.SequenceNumber != nil {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given int64 and assigns it to the SequenceNumber field.
func (o *ModuleConfiguration) SetSequenceNumber(v int64) {
	o.SequenceNumber = &v
}

// GetShouldCommit returns the ShouldCommit field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetShouldCommit() bool {
	if o == nil || o.ShouldCommit == nil {
		var ret bool
		return ret
	}
	return *o.ShouldCommit
}

// GetShouldCommitOk returns a tuple with the ShouldCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetShouldCommitOk() (*bool, bool) {
	if o == nil || o.ShouldCommit == nil {
		return nil, false
	}
	return o.ShouldCommit, true
}

// HasShouldCommit returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasShouldCommit() bool {
	if o != nil && o.ShouldCommit != nil {
		return true
	}

	return false
}

// SetShouldCommit gets a reference to the given bool and assigns it to the ShouldCommit field.
func (o *ModuleConfiguration) SetShouldCommit(v bool) {
	o.ShouldCommit = &v
}

// GetSortValues returns the SortValues field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetSortValues() []string {
	if o == nil || o.SortValues == nil {
		var ret []string
		return ret
	}
	return *o.SortValues
}

// GetSortValuesOk returns a tuple with the SortValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetSortValuesOk() (*[]string, bool) {
	if o == nil || o.SortValues == nil {
		return nil, false
	}
	return o.SortValues, true
}

// HasSortValues returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasSortValues() bool {
	if o != nil && o.SortValues != nil {
		return true
	}

	return false
}

// SetSortValues gets a reference to the given []string and assigns it to the SortValues field.
func (o *ModuleConfiguration) SetSortValues(v []string) {
	o.SortValues = &v
}

// GetSourceModuleID returns the SourceModuleID field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetSourceModuleID() string {
	if o == nil || o.SourceModuleID == nil {
		var ret string
		return ret
	}
	return *o.SourceModuleID
}

// GetSourceModuleIDOk returns a tuple with the SourceModuleID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetSourceModuleIDOk() (*string, bool) {
	if o == nil || o.SourceModuleID == nil {
		return nil, false
	}
	return o.SourceModuleID, true
}

// HasSourceModuleID returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasSourceModuleID() bool {
	if o != nil && o.SourceModuleID != nil {
		return true
	}

	return false
}

// SetSourceModuleID gets a reference to the given string and assigns it to the SourceModuleID field.
func (o *ModuleConfiguration) SetSourceModuleID(v string) {
	o.SourceModuleID = &v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetSystem() bool {
	if o == nil || o.System == nil {
		var ret bool
		return ret
	}
	return *o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetSystemOk() (*bool, bool) {
	if o == nil || o.System == nil {
		return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasSystem() bool {
	if o != nil && o.System != nil {
		return true
	}

	return false
}

// SetSystem gets a reference to the given bool and assigns it to the System field.
func (o *ModuleConfiguration) SetSystem(v bool) {
	o.System = &v
}

// GetToServerVersion returns the ToServerVersion field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetToServerVersion() string {
	if o == nil || o.ToServerVersion == nil {
		var ret string
		return ret
	}
	return *o.ToServerVersion
}

// GetToServerVersionOk returns a tuple with the ToServerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetToServerVersionOk() (*string, bool) {
	if o == nil || o.ToServerVersion == nil {
		return nil, false
	}
	return o.ToServerVersion, true
}

// HasToServerVersion returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasToServerVersion() bool {
	if o != nil && o.ToServerVersion != nil {
		return true
	}

	return false
}

// SetToServerVersion gets a reference to the given string and assigns it to the ToServerVersion field.
func (o *ModuleConfiguration) SetToServerVersion(v string) {
	o.ToServerVersion = &v
}

// GetVcShouldIgnore returns the VcShouldIgnore field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetVcShouldIgnore() bool {
	if o == nil || o.VcShouldIgnore == nil {
		var ret bool
		return ret
	}
	return *o.VcShouldIgnore
}

// GetVcShouldIgnoreOk returns a tuple with the VcShouldIgnore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetVcShouldIgnoreOk() (*bool, bool) {
	if o == nil || o.VcShouldIgnore == nil {
		return nil, false
	}
	return o.VcShouldIgnore, true
}

// HasVcShouldIgnore returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasVcShouldIgnore() bool {
	if o != nil && o.VcShouldIgnore != nil {
		return true
	}

	return false
}

// SetVcShouldIgnore gets a reference to the given bool and assigns it to the VcShouldIgnore field.
func (o *ModuleConfiguration) SetVcShouldIgnore(v bool) {
	o.VcShouldIgnore = &v
}

// GetVcShouldKeepItemLegacyProdMachine returns the VcShouldKeepItemLegacyProdMachine field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetVcShouldKeepItemLegacyProdMachine() bool {
	if o == nil || o.VcShouldKeepItemLegacyProdMachine == nil {
		var ret bool
		return ret
	}
	return *o.VcShouldKeepItemLegacyProdMachine
}

// GetVcShouldKeepItemLegacyProdMachineOk returns a tuple with the VcShouldKeepItemLegacyProdMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetVcShouldKeepItemLegacyProdMachineOk() (*bool, bool) {
	if o == nil || o.VcShouldKeepItemLegacyProdMachine == nil {
		return nil, false
	}
	return o.VcShouldKeepItemLegacyProdMachine, true
}

// HasVcShouldKeepItemLegacyProdMachine returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasVcShouldKeepItemLegacyProdMachine() bool {
	if o != nil && o.VcShouldKeepItemLegacyProdMachine != nil {
		return true
	}

	return false
}

// SetVcShouldKeepItemLegacyProdMachine gets a reference to the given bool and assigns it to the VcShouldKeepItemLegacyProdMachine field.
func (o *ModuleConfiguration) SetVcShouldKeepItemLegacyProdMachine(v bool) {
	o.VcShouldKeepItemLegacyProdMachine = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ModuleConfiguration) GetVersion() int64 {
	if o == nil || o.Version == nil {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleConfiguration) GetVersionOk() (*int64, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ModuleConfiguration) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *ModuleConfiguration) SetVersion(v int64) {
	o.Version = &v
}

func (o ModuleConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Beta != nil {
		toSerialize["beta"] = o.Beta
	}
	if o.Brand != nil {
		toSerialize["brand"] = o.Brand
	}
	if o.CanGetSamples != nil {
		toSerialize["canGetSamples"] = o.CanGetSamples
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Cmdline != nil {
		toSerialize["cmdline"] = o.Cmdline
	}
	if o.CommitMessage != nil {
		toSerialize["commitMessage"] = o.CommitMessage
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.DefaultClassifier != nil {
		toSerialize["defaultClassifier"] = o.DefaultClassifier
	}
	if o.DefaultMapperIn != nil {
		toSerialize["defaultMapperIn"] = o.DefaultMapperIn
	}
	if o.DefaultMapperOut != nil {
		toSerialize["defaultMapperOut"] = o.DefaultMapperOut
	}
	if o.Deprecated != nil {
		toSerialize["deprecated"] = o.Deprecated
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DetailedDescription != nil {
		toSerialize["detailedDescription"] = o.DetailedDescription
	}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	if o.Executable != nil {
		toSerialize["executable"] = o.Executable
	}
	if o.FromServerVersion != nil {
		toSerialize["fromServerVersion"] = o.FromServerVersion
	}
	if o.Hidden != nil {
		toSerialize["hidden"] = o.Hidden
	}
	if o.HideEngines != nil {
		toSerialize["hideEngines"] = o.HideEngines
	}
	if o.Highlight != nil {
		toSerialize["highlight"] = o.Highlight
	}
	if o.Icon != nil {
		toSerialize["icon"] = o.Icon
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.IntegrationScript != nil {
		toSerialize["integrationScript"] = o.IntegrationScript
	}
	if o.IsPasswordProtected != nil {
		toSerialize["isPasswordProtected"] = o.IsPasswordProtected
	}
	if o.ItemVersion != nil {
		toSerialize["itemVersion"] = o.ItemVersion
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.Modified != nil {
		toSerialize["modified"] = o.Modified
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NumericId != nil {
		toSerialize["numericId"] = o.NumericId
	}
	if o.PackID != nil {
		toSerialize["packID"] = o.PackID
	}
	if o.PackPropagationLabels != nil {
		toSerialize["packPropagationLabels"] = o.PackPropagationLabels
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.PrevName != nil {
		toSerialize["prevName"] = o.PrevName
	}
	if o.PrimaryTerm != nil {
		toSerialize["primaryTerm"] = o.PrimaryTerm
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.PropagationLabels != nil {
		toSerialize["propagationLabels"] = o.PropagationLabels
	}
	if o.Readonly != nil {
		toSerialize["readonly"] = o.Readonly
	}
	if o.ScriptNotVisible != nil {
		toSerialize["scriptNotVisible"] = o.ScriptNotVisible
	}
	if o.SequenceNumber != nil {
		toSerialize["sequenceNumber"] = o.SequenceNumber
	}
	if o.ShouldCommit != nil {
		toSerialize["shouldCommit"] = o.ShouldCommit
	}
	if o.SortValues != nil {
		toSerialize["sortValues"] = o.SortValues
	}
	if o.SourceModuleID != nil {
		toSerialize["sourceModuleID"] = o.SourceModuleID
	}
	if o.System != nil {
		toSerialize["system"] = o.System
	}
	if o.ToServerVersion != nil {
		toSerialize["toServerVersion"] = o.ToServerVersion
	}
	if o.VcShouldIgnore != nil {
		toSerialize["vcShouldIgnore"] = o.VcShouldIgnore
	}
	if o.VcShouldKeepItemLegacyProdMachine != nil {
		toSerialize["vcShouldKeepItemLegacyProdMachine"] = o.VcShouldKeepItemLegacyProdMachine
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableModuleConfiguration struct {
	value *ModuleConfiguration
	isSet bool
}

func (v NullableModuleConfiguration) Get() *ModuleConfiguration {
	return v.value
}

func (v *NullableModuleConfiguration) Set(val *ModuleConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableModuleConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableModuleConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModuleConfiguration(val *ModuleConfiguration) *NullableModuleConfiguration {
	return &NullableModuleConfiguration{value: val, isSet: true}
}

func (v NullableModuleConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModuleConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
