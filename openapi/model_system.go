/*
Cortex XSOAR API

This is the public REST API to integrate with the Cortex XSOAR server. HTTP request can be sent using any HTTP-client.  For an example dedicated client take a look at: https://github.com/demisto/demisto-py.  Requests must include API-key that can be generated in the Cortex XSOAR web client under 'Settings' -> 'Integrations' -> 'API keys'   Optimistic Locking and Versioning\\:  When using Cortex XSOAR REST API, you will need to make sure to work on the latest version of the item (incident, entry, etc.), otherwise, you will get a DB version error (which not allow you to override a newer item). In addition, you can pass 'version\\: -1' to force data override (make sure that other users data might be lost).  Assume that Alice and Bob both read the same data from Cortex XSOAR server, then they both changed the data, and then both tried to write the new versions back to the server. Whose changes should be saved? Alice’s? Bob’s? To solve this, each data item in Cortex XSOAR has a numeric incremental version. If Alice saved an item with version 4 and Bob trying to save the same item with version 3, Cortex XSOAR will rollback Bob request and returns a DB version conflict error. Bob will need to get the latest item and work on it so Alice work will not get lost.  Example request using 'curl'\\:  ``` curl 'https://hostname:443/incidents/search' -H 'content-type: application/json' -H 'accept: application/json' -H 'Authorization: <API Key goes here>' --data-binary '{\"filter\":{\"query\":\"-status:closed -category:job\",\"period\":{\"by\":\"day\",\"fromValue\":7}}}' --compressed ```

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// System System - URL stands for ip or hostname
type System struct {
	Agent                 *SystemAgent     `json:"agent,omitempty"`
	Arch                  *string          `json:"arch,omitempty"`
	Ciphers               *[]string        `json:"ciphers,omitempty"`
	Credentials           *string          `json:"credentials,omitempty"`
	EngineId              *string          `json:"engineId,omitempty"`
	Host                  *string          `json:"host,omitempty"`
	Integrationinstanceid *string          `json:"integrationinstanceid,omitempty"`
	Issharedagent         *bool            `json:"issharedagent,omitempty"`
	Name                  *string          `json:"name,omitempty"`
	Os                    *string          `json:"os,omitempty"`
	Password              *string          `json:"password,omitempty"`
	ServicesID            *string          `json:"servicesID,omitempty"`
	Smb                   *int64           `json:"smb,omitempty"`
	Smbport               *int32           `json:"smbport,omitempty"`
	Sshkey                *string          `json:"sshkey,omitempty"`
	Sshport               *int32           `json:"sshport,omitempty"`
	TerminalOptions       *TerminalOptions `json:"terminalOptions,omitempty"`
	User                  *string          `json:"user,omitempty"`
	Workgroup             *string          `json:"workgroup,omitempty"`
}

// NewSystem instantiates a new System object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystem() *System {
	this := System{}
	return &this
}

// NewSystemWithDefaults instantiates a new System object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemWithDefaults() *System {
	this := System{}
	return &this
}

// GetAgent returns the Agent field value if set, zero value otherwise.
func (o *System) GetAgent() SystemAgent {
	if o == nil || o.Agent == nil {
		var ret SystemAgent
		return ret
	}
	return *o.Agent
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetAgentOk() (*SystemAgent, bool) {
	if o == nil || o.Agent == nil {
		return nil, false
	}
	return o.Agent, true
}

// HasAgent returns a boolean if a field has been set.
func (o *System) HasAgent() bool {
	if o != nil && o.Agent != nil {
		return true
	}

	return false
}

// SetAgent gets a reference to the given SystemAgent and assigns it to the Agent field.
func (o *System) SetAgent(v SystemAgent) {
	o.Agent = &v
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *System) GetArch() string {
	if o == nil || o.Arch == nil {
		var ret string
		return ret
	}
	return *o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetArchOk() (*string, bool) {
	if o == nil || o.Arch == nil {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *System) HasArch() bool {
	if o != nil && o.Arch != nil {
		return true
	}

	return false
}

// SetArch gets a reference to the given string and assigns it to the Arch field.
func (o *System) SetArch(v string) {
	o.Arch = &v
}

// GetCiphers returns the Ciphers field value if set, zero value otherwise.
func (o *System) GetCiphers() []string {
	if o == nil || o.Ciphers == nil {
		var ret []string
		return ret
	}
	return *o.Ciphers
}

// GetCiphersOk returns a tuple with the Ciphers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetCiphersOk() (*[]string, bool) {
	if o == nil || o.Ciphers == nil {
		return nil, false
	}
	return o.Ciphers, true
}

// HasCiphers returns a boolean if a field has been set.
func (o *System) HasCiphers() bool {
	if o != nil && o.Ciphers != nil {
		return true
	}

	return false
}

// SetCiphers gets a reference to the given []string and assigns it to the Ciphers field.
func (o *System) SetCiphers(v []string) {
	o.Ciphers = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *System) GetCredentials() string {
	if o == nil || o.Credentials == nil {
		var ret string
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetCredentialsOk() (*string, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *System) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given string and assigns it to the Credentials field.
func (o *System) SetCredentials(v string) {
	o.Credentials = &v
}

// GetEngineId returns the EngineId field value if set, zero value otherwise.
func (o *System) GetEngineId() string {
	if o == nil || o.EngineId == nil {
		var ret string
		return ret
	}
	return *o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetEngineIdOk() (*string, bool) {
	if o == nil || o.EngineId == nil {
		return nil, false
	}
	return o.EngineId, true
}

// HasEngineId returns a boolean if a field has been set.
func (o *System) HasEngineId() bool {
	if o != nil && o.EngineId != nil {
		return true
	}

	return false
}

// SetEngineId gets a reference to the given string and assigns it to the EngineId field.
func (o *System) SetEngineId(v string) {
	o.EngineId = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *System) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *System) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *System) SetHost(v string) {
	o.Host = &v
}

// GetIntegrationinstanceid returns the Integrationinstanceid field value if set, zero value otherwise.
func (o *System) GetIntegrationinstanceid() string {
	if o == nil || o.Integrationinstanceid == nil {
		var ret string
		return ret
	}
	return *o.Integrationinstanceid
}

// GetIntegrationinstanceidOk returns a tuple with the Integrationinstanceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetIntegrationinstanceidOk() (*string, bool) {
	if o == nil || o.Integrationinstanceid == nil {
		return nil, false
	}
	return o.Integrationinstanceid, true
}

// HasIntegrationinstanceid returns a boolean if a field has been set.
func (o *System) HasIntegrationinstanceid() bool {
	if o != nil && o.Integrationinstanceid != nil {
		return true
	}

	return false
}

// SetIntegrationinstanceid gets a reference to the given string and assigns it to the Integrationinstanceid field.
func (o *System) SetIntegrationinstanceid(v string) {
	o.Integrationinstanceid = &v
}

// GetIssharedagent returns the Issharedagent field value if set, zero value otherwise.
func (o *System) GetIssharedagent() bool {
	if o == nil || o.Issharedagent == nil {
		var ret bool
		return ret
	}
	return *o.Issharedagent
}

// GetIssharedagentOk returns a tuple with the Issharedagent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetIssharedagentOk() (*bool, bool) {
	if o == nil || o.Issharedagent == nil {
		return nil, false
	}
	return o.Issharedagent, true
}

// HasIssharedagent returns a boolean if a field has been set.
func (o *System) HasIssharedagent() bool {
	if o != nil && o.Issharedagent != nil {
		return true
	}

	return false
}

// SetIssharedagent gets a reference to the given bool and assigns it to the Issharedagent field.
func (o *System) SetIssharedagent(v bool) {
	o.Issharedagent = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *System) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *System) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *System) SetName(v string) {
	o.Name = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *System) GetOs() string {
	if o == nil || o.Os == nil {
		var ret string
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetOsOk() (*string, bool) {
	if o == nil || o.Os == nil {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *System) HasOs() bool {
	if o != nil && o.Os != nil {
		return true
	}

	return false
}

// SetOs gets a reference to the given string and assigns it to the Os field.
func (o *System) SetOs(v string) {
	o.Os = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *System) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *System) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *System) SetPassword(v string) {
	o.Password = &v
}

// GetServicesID returns the ServicesID field value if set, zero value otherwise.
func (o *System) GetServicesID() string {
	if o == nil || o.ServicesID == nil {
		var ret string
		return ret
	}
	return *o.ServicesID
}

// GetServicesIDOk returns a tuple with the ServicesID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetServicesIDOk() (*string, bool) {
	if o == nil || o.ServicesID == nil {
		return nil, false
	}
	return o.ServicesID, true
}

// HasServicesID returns a boolean if a field has been set.
func (o *System) HasServicesID() bool {
	if o != nil && o.ServicesID != nil {
		return true
	}

	return false
}

// SetServicesID gets a reference to the given string and assigns it to the ServicesID field.
func (o *System) SetServicesID(v string) {
	o.ServicesID = &v
}

// GetSmb returns the Smb field value if set, zero value otherwise.
func (o *System) GetSmb() int64 {
	if o == nil || o.Smb == nil {
		var ret int64
		return ret
	}
	return *o.Smb
}

// GetSmbOk returns a tuple with the Smb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetSmbOk() (*int64, bool) {
	if o == nil || o.Smb == nil {
		return nil, false
	}
	return o.Smb, true
}

// HasSmb returns a boolean if a field has been set.
func (o *System) HasSmb() bool {
	if o != nil && o.Smb != nil {
		return true
	}

	return false
}

// SetSmb gets a reference to the given int64 and assigns it to the Smb field.
func (o *System) SetSmb(v int64) {
	o.Smb = &v
}

// GetSmbport returns the Smbport field value if set, zero value otherwise.
func (o *System) GetSmbport() int32 {
	if o == nil || o.Smbport == nil {
		var ret int32
		return ret
	}
	return *o.Smbport
}

// GetSmbportOk returns a tuple with the Smbport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetSmbportOk() (*int32, bool) {
	if o == nil || o.Smbport == nil {
		return nil, false
	}
	return o.Smbport, true
}

// HasSmbport returns a boolean if a field has been set.
func (o *System) HasSmbport() bool {
	if o != nil && o.Smbport != nil {
		return true
	}

	return false
}

// SetSmbport gets a reference to the given int32 and assigns it to the Smbport field.
func (o *System) SetSmbport(v int32) {
	o.Smbport = &v
}

// GetSshkey returns the Sshkey field value if set, zero value otherwise.
func (o *System) GetSshkey() string {
	if o == nil || o.Sshkey == nil {
		var ret string
		return ret
	}
	return *o.Sshkey
}

// GetSshkeyOk returns a tuple with the Sshkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetSshkeyOk() (*string, bool) {
	if o == nil || o.Sshkey == nil {
		return nil, false
	}
	return o.Sshkey, true
}

// HasSshkey returns a boolean if a field has been set.
func (o *System) HasSshkey() bool {
	if o != nil && o.Sshkey != nil {
		return true
	}

	return false
}

// SetSshkey gets a reference to the given string and assigns it to the Sshkey field.
func (o *System) SetSshkey(v string) {
	o.Sshkey = &v
}

// GetSshport returns the Sshport field value if set, zero value otherwise.
func (o *System) GetSshport() int32 {
	if o == nil || o.Sshport == nil {
		var ret int32
		return ret
	}
	return *o.Sshport
}

// GetSshportOk returns a tuple with the Sshport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetSshportOk() (*int32, bool) {
	if o == nil || o.Sshport == nil {
		return nil, false
	}
	return o.Sshport, true
}

// HasSshport returns a boolean if a field has been set.
func (o *System) HasSshport() bool {
	if o != nil && o.Sshport != nil {
		return true
	}

	return false
}

// SetSshport gets a reference to the given int32 and assigns it to the Sshport field.
func (o *System) SetSshport(v int32) {
	o.Sshport = &v
}

// GetTerminalOptions returns the TerminalOptions field value if set, zero value otherwise.
func (o *System) GetTerminalOptions() TerminalOptions {
	if o == nil || o.TerminalOptions == nil {
		var ret TerminalOptions
		return ret
	}
	return *o.TerminalOptions
}

// GetTerminalOptionsOk returns a tuple with the TerminalOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetTerminalOptionsOk() (*TerminalOptions, bool) {
	if o == nil || o.TerminalOptions == nil {
		return nil, false
	}
	return o.TerminalOptions, true
}

// HasTerminalOptions returns a boolean if a field has been set.
func (o *System) HasTerminalOptions() bool {
	if o != nil && o.TerminalOptions != nil {
		return true
	}

	return false
}

// SetTerminalOptions gets a reference to the given TerminalOptions and assigns it to the TerminalOptions field.
func (o *System) SetTerminalOptions(v TerminalOptions) {
	o.TerminalOptions = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *System) GetUser() string {
	if o == nil || o.User == nil {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetUserOk() (*string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *System) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *System) SetUser(v string) {
	o.User = &v
}

// GetWorkgroup returns the Workgroup field value if set, zero value otherwise.
func (o *System) GetWorkgroup() string {
	if o == nil || o.Workgroup == nil {
		var ret string
		return ret
	}
	return *o.Workgroup
}

// GetWorkgroupOk returns a tuple with the Workgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetWorkgroupOk() (*string, bool) {
	if o == nil || o.Workgroup == nil {
		return nil, false
	}
	return o.Workgroup, true
}

// HasWorkgroup returns a boolean if a field has been set.
func (o *System) HasWorkgroup() bool {
	if o != nil && o.Workgroup != nil {
		return true
	}

	return false
}

// SetWorkgroup gets a reference to the given string and assigns it to the Workgroup field.
func (o *System) SetWorkgroup(v string) {
	o.Workgroup = &v
}

func (o System) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Agent != nil {
		toSerialize["agent"] = o.Agent
	}
	if o.Arch != nil {
		toSerialize["arch"] = o.Arch
	}
	if o.Ciphers != nil {
		toSerialize["ciphers"] = o.Ciphers
	}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.EngineId != nil {
		toSerialize["engineId"] = o.EngineId
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Integrationinstanceid != nil {
		toSerialize["integrationinstanceid"] = o.Integrationinstanceid
	}
	if o.Issharedagent != nil {
		toSerialize["issharedagent"] = o.Issharedagent
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Os != nil {
		toSerialize["os"] = o.Os
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.ServicesID != nil {
		toSerialize["servicesID"] = o.ServicesID
	}
	if o.Smb != nil {
		toSerialize["smb"] = o.Smb
	}
	if o.Smbport != nil {
		toSerialize["smbport"] = o.Smbport
	}
	if o.Sshkey != nil {
		toSerialize["sshkey"] = o.Sshkey
	}
	if o.Sshport != nil {
		toSerialize["sshport"] = o.Sshport
	}
	if o.TerminalOptions != nil {
		toSerialize["terminalOptions"] = o.TerminalOptions
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Workgroup != nil {
		toSerialize["workgroup"] = o.Workgroup
	}
	return json.Marshal(toSerialize)
}

type NullableSystem struct {
	value *System
	isSet bool
}

func (v NullableSystem) Get() *System {
	return v.value
}

func (v *NullableSystem) Set(val *System) {
	v.value = val
	v.isSet = true
}

func (v NullableSystem) IsSet() bool {
	return v.isSet
}

func (v *NullableSystem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystem(val *System) *NullableSystem {
	return &NullableSystem{value: val, isSet: true}
}

func (v NullableSystem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
